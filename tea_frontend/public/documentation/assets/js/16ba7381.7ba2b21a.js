"use strict";(self.webpackChunktea_docs=self.webpackChunktea_docs||[]).push([[2474],{7224:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"docs/technical-guide/frontend-reference/tailwindcss","title":"Introduction to Tailwind CSS","description":"Tailwind CSS is a utility-first CSS framework that provides a comprehensive set of classes for designing responsive user interfaces quickly and efficiently. Unlike traditional CSS frameworks that offer predefined components, Tailwind allows you to compose designs directly in your HTML using utility classes.","source":"@site/docs/docs/technical-guide/frontend-reference/tailwindcss.md","sourceDirName":"docs/technical-guide/frontend-reference","slug":"/docs/technical-guide/frontend-reference/tailwindcss","permalink":"/documentation/docs/technical-guide/frontend-reference/tailwindcss","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Tailwindcss"},"sidebar":"teaSidebar","previous":{"title":"Next.js","permalink":"/documentation/docs/technical-guide/frontend-reference/nextjs"},"next":{"title":"Setting up Next Auth.js","permalink":"/documentation/docs/technical-guide/frontend-reference/nextauthjs"}}');var t=i(4848),o=i(8453);const l={sidebar_position:2,sidebar_label:"Tailwindcss"},a="Introduction to Tailwind CSS",r={},c=[{value:"Key Features of Tailwind CSS",id:"key-features-of-tailwind-css",level:2},{value:"Installation",id:"installation",level:2},{value:"Step 1: Set Up Your Project",id:"step-1-set-up-your-project",level:3},{value:"Step 2: Install Tailwind CSS",id:"step-2-install-tailwind-css",level:3},{value:"Step 3: Initialize Tailwind CSS",id:"step-3-initialize-tailwind-css",level:3},{value:"Step 4: Configure Tailwind to Remove Unused Styles",id:"step-4-configure-tailwind-to-remove-unused-styles",level:3},{value:"Step 5: Add Tailwind to Your CSS",id:"step-5-add-tailwind-to-your-css",level:3},{value:"Step 6: Start Using Tailwind CSS",id:"step-6-start-using-tailwind-css",level:3},{value:"Customization",id:"customization",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction-to-tailwind-css",children:"Introduction to Tailwind CSS"})}),"\n",(0,t.jsx)(n.p,{children:"Tailwind CSS is a utility-first CSS framework that provides a comprehensive set of classes for designing responsive user interfaces quickly and efficiently. Unlike traditional CSS frameworks that offer predefined components, Tailwind allows you to compose designs directly in your HTML using utility classes."}),"\n",(0,t.jsx)(n.h2,{id:"key-features-of-tailwind-css",children:"Key Features of Tailwind CSS"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Utility-First"}),": Focus on small, reusable utility classes for styling, promoting a modular approach to design."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Responsive Design"}),": Built-in responsive utilities make it easy to create designs that work across different screen sizes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Customization"}),": Highly customizable with a configuration file that allows you to set up your design system (colors, spacing, typography, etc.)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JIT Mode"}),": Just-In-Time (JIT) compilation for on-demand generation of styles, resulting in faster build times and smaller CSS files."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"To use Tailwind CSS in your project, follow these steps:"}),"\n",(0,t.jsx)(n.h3,{id:"step-1-set-up-your-project",children:"Step 1: Set Up Your Project"}),"\n",(0,t.jsx)(n.p,{children:"If you don\u2019t have a project yet, create a new one. For example, using Next.js:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx create-next-app my-tailwind-app\ncd my-tailwind-app\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-2-install-tailwind-css",children:"Step 2: Install Tailwind CSS"}),"\n",(0,t.jsx)(n.p,{children:"Install Tailwind CSS via npm:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install -D tailwindcss postcss autoprefixer\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-3-initialize-tailwind-css",children:"Step 3: Initialize Tailwind CSS"}),"\n",(0,t.jsx)(n.p,{children:"Generate the configuration files for Tailwind CSS and PostCSS:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx tailwindcss init -p\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This command creates two files: ",(0,t.jsx)(n.code,{children:"tailwind.config.js"})," and ",(0,t.jsx)(n.code,{children:"postcss.config.js"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"step-4-configure-tailwind-to-remove-unused-styles",children:"Step 4: Configure Tailwind to Remove Unused Styles"}),"\n",(0,t.jsxs)(n.p,{children:["Edit the ",(0,t.jsx)(n.code,{children:"tailwind.config.js"})," file to specify the paths to all of your template files:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'/** @type {import(\'tailwindcss\').Config} */\nmodule.exports = {\n  content: [\n    "./pages/**/*.{js,ts,jsx,tsx}", // Next.js pages\n    "./components/**/*.{js,ts,jsx,tsx}", // Next.js components\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"step-5-add-tailwind-to-your-css",children:"Step 5: Add Tailwind to Your CSS"}),"\n",(0,t.jsxs)(n.p,{children:["In your CSS file (e.g., ",(0,t.jsx)(n.code,{children:"styles/globals.css"}),"), add the following lines:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-6-start-using-tailwind-css",children:"Step 6: Start Using Tailwind CSS"}),"\n",(0,t.jsx)(n.p,{children:"Now you can start using Tailwind CSS classes in your components. For example, create a simple button:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// components/Button.js\nconst Button = () => {\n  return (\n    <button className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700">\n      Click Me\n    </button>\n  );\n};\n\nexport default Button;\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can then use this button component in your pages:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// pages/index.js\nimport Button from \'../components/Button\';\n\nconst HomePage = () => {\n  return (\n    <div className="flex flex-col items-center justify-center h-screen">\n      <h1 className="text-3xl font-bold mb-4">Welcome to My Tailwind App</h1>\n      <Button />\n    </div>\n  );\n};\n\nexport default HomePage;\n'})}),"\n",(0,t.jsx)(n.h3,{id:"customization",children:"Customization"}),"\n",(0,t.jsxs)(n.p,{children:["Tailwind CSS is highly customizable. You can extend the default theme by modifying the ",(0,t.jsx)(n.code,{children:"tailwind.config.js"})," file. For example, to add custom colors:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"theme: {\n  extend: {\n    colors: {\n      customBlue: '#1DA1F2',\n    },\n  },\n},\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can then use your custom color in your components:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<button className="bg-customBlue text-white">Custom Color Button</button>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Tailwind CSS offers a powerful way to build modern, responsive web applications with a utility-first approach. Its customization options and ease of use make it a popular choice among developers looking to streamline their design process. By integrating Tailwind CSS into your Next.js project, you can create beautiful interfaces quickly and efficiently."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);