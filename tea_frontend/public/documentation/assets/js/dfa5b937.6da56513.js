"use strict";(self.webpackChunktea_docs=self.webpackChunktea_docs||[]).push([[6858],{8472:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"docs/technical-guide/frontend-reference/reactflow","title":"Introduction to React Flow","description":"React Flow is a library for building interactive node-based applications using React. It provides a simple API for creating flows, diagrams, and custom workflows. React Flow is especially useful for visualizing data relationships and building complex interfaces where users can manipulate nodes and edges.","source":"@site/docs/docs/technical-guide/frontend-reference/reactflow.md","sourceDirName":"docs/technical-guide/frontend-reference","slug":"/docs/technical-guide/frontend-reference/reactflow","permalink":"/documentation/docs/technical-guide/frontend-reference/reactflow","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Reactflow Diagram Tool"},"sidebar":"teaSidebar","previous":{"title":"Setting up Next Auth.js","permalink":"/documentation/docs/technical-guide/frontend-reference/nextauthjs"},"next":{"title":"CI/CD Pipeline","permalink":"/documentation/category/cicd-pipeline"}}');var a=t(4848),i=t(8453);const s={sidebar_position:4,sidebar_label:"Reactflow Diagram Tool"},r="Introduction to React Flow",l={},d=[{value:"Key Features of React Flow",id:"key-features-of-react-flow",level:2},{value:"Installation",id:"installation",level:2},{value:"Setting Up React Flow in a Next.js Application",id:"setting-up-react-flow-in-a-nextjs-application",level:2},{value:"Step 1: Create a New Component**",id:"step-1-create-a-new-component",level:3},{value:"Step 2: Create Custom Nodes",id:"step-2-create-custom-nodes",level:3},{value:"Step 3: Update FlowChart to Use Custom Nodes",id:"step-3-update-flowchart-to-use-custom-nodes",level:3},{value:"Step 4: Integrate the Flow Chart in a Next.js Page",id:"step-4-integrate-the-flow-chart-in-a-nextjs-page",level:3},{value:"Step 5: Style Your Application",id:"step-5-style-your-application",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"introduction-to-react-flow",children:"Introduction to React Flow"})}),"\n",(0,a.jsx)(n.p,{children:"React Flow is a library for building interactive node-based applications using React. It provides a simple API for creating flows, diagrams, and custom workflows. React Flow is especially useful for visualizing data relationships and building complex interfaces where users can manipulate nodes and edges."}),"\n",(0,a.jsx)(n.h2,{id:"key-features-of-react-flow",children:"Key Features of React Flow"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Node and Edge Management"}),": Easily manage nodes and edges with a straightforward API."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Customizable Components"}),": Create custom nodes and edges to fit specific use cases."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Zoom and Pan"}),": Supports zooming and panning, allowing users to navigate complex diagrams effortlessly."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Interactive"}),": Provides drag-and-drop functionality for a more interactive user experience."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Flexible Layouts"}),": Supports different layouts for nodes, enabling various design patterns."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.p,{children:"To get started with React Flow in a Next.js application, you need to install the library:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install react-flow-renderer\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setting-up-react-flow-in-a-nextjs-application",children:"Setting Up React Flow in a Next.js Application"}),"\n",(0,a.jsx)(n.h3,{id:"step-1-create-a-new-component",children:"Step 1: Create a New Component**"}),"\n",(0,a.jsx)(n.p,{children:"Create a new component (e.g., FlowChart.js) where you will set up the React Flow diagram."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"// components/FlowChart.js\nimport React from 'react';\nimport ReactFlow, { MiniMap, Controls } from 'react-flow-renderer';\n\nconst initialNodes = [\n  { id: '1', type: 'input', data: { label: 'Input Node' }, position: { x: 250, y: 5 } },\n  { id: '2', data: { label: 'Default Node' }, position: { x: 100, y: 100 } },\n  { id: '3', type: 'output', data: { label: 'Output Node' }, position: { x: 250, y: 200 } },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2' },\n  { id: 'e2-3', source: '2', target: '3' },\n];\n\nconst FlowChart = () => {\n  return (\n    <ReactFlow\n      nodes={initialNodes}\n      edges={initialEdges}\n      style={{ width: '100%', height: '400px' }}\n    >\n      <MiniMap />\n      <Controls />\n    </ReactFlow>\n  );\n};\n\nexport default FlowChart;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"step-2-create-custom-nodes",children:"Step 2: Create Custom Nodes"}),"\n",(0,a.jsx)(n.p,{children:"To create custom nodes, you can define your own React components and use them in the nodes array. Here\u2019s an example of how to create a custom node:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"// components/CustomNode.js\nimport React from 'react';\n\nconst CustomNode = ({ data }) => {\n  return (\n    <div style={{ padding: '10px', border: '1px solid #ddd', borderRadius: '5px', background: '#fff' }}>\n      <strong>{data.label}</strong>\n      <p>{data.description}</p>\n    </div>\n  );\n};\n\nexport default CustomNode;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"step-3-update-flowchart-to-use-custom-nodes",children:"Step 3: Update FlowChart to Use Custom Nodes"}),"\n",(0,a.jsx)(n.p,{children:"Now, integrate the custom node into your FlowChart.js component:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport ReactFlow, { MiniMap, Controls } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\n\nconst initialNodes = [\n  { id: '1', type: 'custom', data: { label: 'Custom Node', description: 'This is a custom node' }, position: { x: 250, y: 5 } },\n  { id: '2', data: { label: 'Default Node' }, position: { x: 100, y: 100 } },\n  { id: '3', type: 'output', data: { label: 'Output Node' }, position: { x: 250, y: 200 } },\n];\n\nconst nodeTypes = {\n  custom: CustomNode,\n};\n\nconst FlowChart = () => {\n  return (\n    <ReactFlow\n      nodes={initialNodes}\n      edges={initialEdges}\n      nodeTypes={nodeTypes}\n      style={{ width: '100%', height: '400px' }}\n    >\n      <MiniMap />\n      <Controls />\n    </ReactFlow>\n  );\n};\n\nexport default FlowChart;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"step-4-integrate-the-flow-chart-in-a-nextjs-page",children:"Step 4: Integrate the Flow Chart in a Next.js Page"}),"\n",(0,a.jsxs)(n.p,{children:["Now, you can integrate the ",(0,a.jsx)(n.code,{children:"FlowChart"})," component into a Next.js page."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"// pages/index.js\nimport React from 'react';\nimport FlowChart from '../components/FlowChart';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <h1>My React Flow Diagram</h1>\n      <FlowChart />\n    </div>\n  );\n};\n\nexport default HomePage;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"step-5-style-your-application",children:"Step 5: Style Your Application"}),"\n",(0,a.jsx)(n.p,{children:"You can customize the appearance of your flow diagram using CSS. React Flow is highly customizable, allowing you to style nodes, edges, and the overall canvas."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* styles/globals.css */\n.react-flow__node-input {\n  background: #fff;\n  border: 1px solid #ddd;\n}\n\n.react-flow__node-default {\n  background: #f0f0f0;\n}\n\n.react-flow__node-output {\n  background: #e0e0e0;\n}\n\n/* Custom node styles */\n.custom-node {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background: #fff;\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"React Flow is a powerful tool for creating interactive diagrams in React applications. By integrating React Flow into a Next.js app and creating custom nodes, you can build visually appealing and user-friendly interfaces that allow for complex data visualizations. With its customizable components and easy-to-use API, React Flow enhances the user experience by providing a seamless way to manage and interact with data flows."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var o=t(6540);const a={},i=o.createContext(a);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);