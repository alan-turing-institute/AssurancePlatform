# Generated by Django 3.2.8 on 2025-07-10 13:00
# Step 2: Data migration to populate new field (if needed)

from django.db import migrations


def populate_published_assurance_cases(apps, schema_editor):
    """
    Populate the new published_assurance_cases field based on existing assurance_cases.
    This is a placeholder for future data migration logic if needed.

    Since we're in development and the relationship change is fundamental
    (AssuranceCase -> PublishedAssuranceCase), we'll leave this empty for now.
    Production systems would need custom logic here.
    """
    CaseStudy = apps.get_model("api", "CaseStudy")
    PublishedAssuranceCase = apps.get_model("api", "PublishedAssuranceCase")

    # For development: no data migration needed
    # Production would implement logic to map AssuranceCase -> PublishedAssuranceCase


def reverse_populate_published_assurance_cases(apps, schema_editor):
    """
    Reverse data migration - clear the new field
    """
    CaseStudy = apps.get_model("api", "CaseStudy")

    for case_study in CaseStudy.objects.all():
        case_study.published_assurance_cases.clear()


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0044_add_published_assurance_cases"),
    ]

    operations = [
        migrations.RunPython(
            populate_published_assurance_cases,
            reverse_populate_published_assurance_cases,
        ),
    ]
